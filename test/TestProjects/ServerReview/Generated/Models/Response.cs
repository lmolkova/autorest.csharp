// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace ServerReview.Models
{
    /// <summary> Response body received from the Plugin Server. </summary>
    public partial class Response
    {
        /// <summary> Initializes a new instance of Response. </summary>
        /// <param name="id"> As passed in the URL?s operationId query parameter. </param>
        /// <param name="kind"> Service-set extensible enum indicating operation?s kind. </param>
        /// <param name="status"> Service-set extensible enum indicating operation?s kind. </param>
        /// <param name="createdTime"> When the client creates the LRO. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> is null. </exception>
        public Response(string id, OperationType kind, ExecutionStatus status, DateTimeOffset createdTime)
        {
            if (id == null)
            {
                throw new ArgumentNullException(nameof(id));
            }

            Id = id;
            Kind = kind;
            Status = status;
            CreatedTime = createdTime;
        }

        /// <summary> Initializes a new instance of Response. </summary>
        /// <param name="id"> As passed in the URL?s operationId query parameter. </param>
        /// <param name="kind"> Service-set extensible enum indicating operation?s kind. </param>
        /// <param name="status"> Service-set extensible enum indicating operation?s kind. </param>
        /// <param name="createdTime"> When the client creates the LRO. </param>
        /// <param name="startTime"> When server starts processing this LRO. </param>
        /// <param name="endTime"> When service finishes processing this LRO. </param>
        /// <param name="purgeTime"> Time at which server will GC this LRO. This is set after EndTime. </param>
        /// <param name="baseRequest"> Original request body. </param>
        /// <param name="notStartedResponse"> Set the Kind- specific response when Status = NotStarted. </param>
        /// <param name="runningResponse"> Set the Kind- specific response when Status = Running. </param>
        /// <param name="failedResponse"> Set the Kind- specific response when Status = Failed. </param>
        /// <param name="canceledResponse"> Set the Kind- specific response when Status = Cancelled. </param>
        /// <param name="succeededResponse"> Set the Kind- specific response when Status = Succeeded. </param>
        internal Response(string id, OperationType kind, ExecutionStatus status, DateTimeOffset createdTime, DateTimeOffset? startTime, DateTimeOffset? endTime, DateTimeOffset? purgeTime, BaseRequest baseRequest, BaseStatus notStartedResponse, BaseStatus runningResponse, BaseStatus failedResponse, BaseStatus canceledResponse, BaseStatus succeededResponse)
        {
            Id = id;
            Kind = kind;
            Status = status;
            CreatedTime = createdTime;
            StartTime = startTime;
            EndTime = endTime;
            PurgeTime = purgeTime;
            BaseRequest = baseRequest;
            NotStartedResponse = notStartedResponse;
            RunningResponse = runningResponse;
            FailedResponse = failedResponse;
            CanceledResponse = canceledResponse;
            SucceededResponse = succeededResponse;
        }

        /// <summary> As passed in the URL?s operationId query parameter. </summary>
        public string Id { get; set; }
        /// <summary> Service-set extensible enum indicating operation?s kind. </summary>
        public OperationType Kind { get; set; }
        /// <summary> Service-set extensible enum indicating operation?s kind. </summary>
        public ExecutionStatus Status { get; set; }
        /// <summary> When the client creates the LRO. </summary>
        public DateTimeOffset CreatedTime { get; set; }
        /// <summary> When server starts processing this LRO. </summary>
        public DateTimeOffset? StartTime { get; set; }
        /// <summary> When service finishes processing this LRO. </summary>
        public DateTimeOffset? EndTime { get; set; }
        /// <summary> Time at which server will GC this LRO. This is set after EndTime. </summary>
        public DateTimeOffset? PurgeTime { get; set; }
        /// <summary> Original request body. </summary>
        public BaseRequest BaseRequest { get; set; }
        /// <summary> Set the Kind- specific response when Status = NotStarted. </summary>
        public BaseStatus NotStartedResponse { get; set; }
        /// <summary> Set the Kind- specific response when Status = Running. </summary>
        public BaseStatus RunningResponse { get; set; }
        /// <summary> Set the Kind- specific response when Status = Failed. </summary>
        public BaseStatus FailedResponse { get; set; }
        /// <summary> Set the Kind- specific response when Status = Cancelled. </summary>
        public BaseStatus CanceledResponse { get; set; }
        /// <summary> Set the Kind- specific response when Status = Succeeded. </summary>
        public BaseStatus SucceededResponse { get; set; }
    }
}
