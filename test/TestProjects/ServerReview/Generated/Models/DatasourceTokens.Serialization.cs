// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace ServerReview.Models
{
    public partial class DatasourceTokens : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DataPlaneToken))
            {
                writer.WritePropertyName("dataPlaneToken");
                writer.WriteStringValue(DataPlaneToken);
            }
            if (Optional.IsDefined(MgmtPlaneToken))
            {
                writer.WritePropertyName("mgmtPlaneToken");
                writer.WriteStringValue(MgmtPlaneToken);
            }
            if (Optional.IsDefined(DataPlanePrincipalId))
            {
                writer.WritePropertyName("dataPlanePrincipalId");
                writer.WriteStringValue(DataPlanePrincipalId);
            }
            if (Optional.IsDefined(MgmtPlanePrincipalId))
            {
                writer.WritePropertyName("mgmtPlanePrincipalId");
                writer.WriteStringValue(MgmtPlanePrincipalId);
            }
            if (Optional.IsDefined(DataPlaneTokenType))
            {
                writer.WritePropertyName("dataPlaneTokenType");
                writer.WriteStringValue(DataPlaneTokenType);
            }
            writer.WriteEndObject();
        }

        internal static DatasourceTokens DeserializeDatasourceTokens(JsonElement element)
        {
            Optional<string> dataPlaneToken = default;
            Optional<string> mgmtPlaneToken = default;
            Optional<string> dataPlanePrincipalId = default;
            Optional<string> mgmtPlanePrincipalId = default;
            Optional<string> dataPlaneTokenType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("dataPlaneToken"))
                {
                    dataPlaneToken = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("mgmtPlaneToken"))
                {
                    mgmtPlaneToken = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dataPlanePrincipalId"))
                {
                    dataPlanePrincipalId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("mgmtPlanePrincipalId"))
                {
                    mgmtPlanePrincipalId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dataPlaneTokenType"))
                {
                    dataPlaneTokenType = property.Value.GetString();
                    continue;
                }
            }
            return new DatasourceTokens(dataPlaneToken.Value, mgmtPlaneToken.Value, dataPlanePrincipalId.Value, mgmtPlanePrincipalId.Value, dataPlaneTokenType.Value);
        }
    }
}
