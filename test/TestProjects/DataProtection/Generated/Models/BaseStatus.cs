// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace DataProtection.Models
{
    /// <summary> Base Response. </summary>
    public partial class BaseStatus
    {
        /// <summary> Initializes a new instance of BaseStatus. </summary>
        internal BaseStatus()
        {
            AdditionalProperties = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of BaseStatus. </summary>
        /// <param name="additionalProperties"> Any additional properties that should be returned along with this operation. </param>
        /// <param name="telemetryData"> Additional Json Serialized Telemetry data from the Plugin. This would be logged with BA Telemetry. </param>
        /// <param name="retryAfterOnRetryableErrorInSeconds"> If Plugin terminates with a retryable ErrorCode, it can set this value in Seconds for BA to retry after this. </param>
        internal BaseStatus(IReadOnlyDictionary<string, string> additionalProperties, string telemetryData, int? retryAfterOnRetryableErrorInSeconds)
        {
            AdditionalProperties = additionalProperties;
            TelemetryData = telemetryData;
            RetryAfterOnRetryableErrorInSeconds = retryAfterOnRetryableErrorInSeconds;
        }

        /// <summary> Any additional properties that should be returned along with this operation. </summary>
        public IReadOnlyDictionary<string, string> AdditionalProperties { get; }
        /// <summary> Additional Json Serialized Telemetry data from the Plugin. This would be logged with BA Telemetry. </summary>
        public string TelemetryData { get; }
        /// <summary> If Plugin terminates with a retryable ErrorCode, it can set this value in Seconds for BA to retry after this. </summary>
        public int? RetryAfterOnRetryableErrorInSeconds { get; }
    }
}
